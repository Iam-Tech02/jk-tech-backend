import { ConfigService } from '@nestjs/config';
import { PrismaService } from 'src/prisma/prisma.service';
import { CreateBlogDto } from './dto/create-blog.dto';
import { UpdateBlogDto } from './dto/update-blog.dto';
export declare class BlogsService {
    private readonly prisma;
    private readonly configService;
    constructor(prisma: PrismaService, configService: ConfigService);
    create(addedBy: number, createBlogDto: CreateBlogDto): Promise<{
        id: number;
        title: string;
        about: string;
        brief: string;
        addedBy: number;
        comments: import(".prisma/client").Prisma.JsonValue;
        likes: import(".prisma/client").Prisma.JsonValue;
        shares: import(".prisma/client").Prisma.JsonValue;
        views: import(".prisma/client").Prisma.JsonValue;
        isDeleted: boolean;
        createdAt: Date;
        updatedAt: Date;
    }>;
    findAll(): import(".prisma/client").Prisma.PrismaPromise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        title: string;
        about: string;
        brief: string;
        addedBy: number;
        comments: import(".prisma/client").Prisma.JsonValue;
        likes: import(".prisma/client").Prisma.JsonValue;
        shares: import(".prisma/client").Prisma.JsonValue;
        views: import(".prisma/client").Prisma.JsonValue;
    }[]>;
    findOneById(id: number): import(".prisma/client").Prisma.Prisma__BlogClient<{
        id: number;
        title: string;
        about: string;
        brief: string;
        addedBy: number;
        comments: import(".prisma/client").Prisma.JsonValue;
        likes: import(".prisma/client").Prisma.JsonValue;
        shares: import(".prisma/client").Prisma.JsonValue;
        views: import(".prisma/client").Prisma.JsonValue;
        isDeleted: boolean;
        createdAt: Date;
        updatedAt: Date;
    }, null, import("@prisma/client/runtime/library").DefaultArgs>;
    findOneByKeywords(searchString: string): import(".prisma/client").Prisma.Prisma__BlogClient<{
        id: number;
        title: string;
        about: string;
        brief: string;
        addedBy: number;
        comments: import(".prisma/client").Prisma.JsonValue;
        likes: import(".prisma/client").Prisma.JsonValue;
        shares: import(".prisma/client").Prisma.JsonValue;
        views: import(".prisma/client").Prisma.JsonValue;
        isDeleted: boolean;
        createdAt: Date;
        updatedAt: Date;
    }, null, import("@prisma/client/runtime/library").DefaultArgs>;
    update(id: number, updateBlogDto: UpdateBlogDto): import(".prisma/client").Prisma.Prisma__BlogClient<{
        id: number;
        title: string;
        about: string;
        brief: string;
        addedBy: number;
        comments: import(".prisma/client").Prisma.JsonValue;
        likes: import(".prisma/client").Prisma.JsonValue;
        shares: import(".prisma/client").Prisma.JsonValue;
        views: import(".prisma/client").Prisma.JsonValue;
        isDeleted: boolean;
        createdAt: Date;
        updatedAt: Date;
    }, never, import("@prisma/client/runtime/library").DefaultArgs>;
    remove(id: number): import(".prisma/client").Prisma.Prisma__BlogClient<{
        id: number;
        title: string;
        about: string;
        brief: string;
        addedBy: number;
        comments: import(".prisma/client").Prisma.JsonValue;
        likes: import(".prisma/client").Prisma.JsonValue;
        shares: import(".prisma/client").Prisma.JsonValue;
        views: import(".prisma/client").Prisma.JsonValue;
        isDeleted: boolean;
        createdAt: Date;
        updatedAt: Date;
    }, never, import("@prisma/client/runtime/library").DefaultArgs>;
}
